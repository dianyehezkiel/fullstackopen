{"version":3,"sources":["components/Filter.js","components/Notification.js","components/PersonForm.js","components/Persons.js","services/persons.js","App.js","index.js"],"names":["Filter","onChange","useState","filter","setFilter","value","event","target","Notification","type","message","className","PersonForm","onSubmit","newName","setNewName","newNumber","setNewNumber","preventDefault","placeholder","required","Persons","persons","onDelete","map","person","style","display","name","number","onClick","id","baseUrl","personServices","getAll","axios","get","then","response","data","create","newPerson","post","update","newObject","put","deletePerson","delete","App","setPersons","filteredPersons","setFilteredPersons","notifType","setNotifType","notifMessage","setNotifMessage","useEffect","initialPersons","fp","toLowerCase","includes","personExist","find","returnedPerson","setTimeout","concat","catch","error","console","log","window","confirm","updatedPerson","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.795c503e.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Filter = ({ onChange }) => {\r\n  const [filter, setFilter] = useState('');\r\n\r\n  const handleFilterChange = (event) => {\r\n    setFilter(event.target.value);\r\n    onChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      filter shown with:\r\n      <input value={filter} onChange={handleFilterChange} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;","const Notification = ({ type, message }) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={type}>\r\n      {message}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;","import React, { useState } from 'react';\r\n\r\nconst PersonForm = ({ onSubmit }) => {\r\n  const [ newName, setNewName ] = useState('');\r\n  const [ newNumber, setNewNumber ] = useState('');\r\n\r\n  const onNameChange = (event) => {\r\n    setNewName(event.target.value);\r\n  }\r\n\r\n  const onNumberChange = (event) => {\r\n    setNewNumber(event.target.value);\r\n  }\r\n\r\n  const handleAddPerson = (event) => {\r\n    event.preventDefault();\r\n    const isAdded = onSubmit(newName, newNumber)\r\n    \r\n    if(isAdded) {\r\n      setNewName('');\r\n      setNewNumber('');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleAddPerson}>\r\n      <div>\r\n        name: <input\r\n          placeholder=\"Add Name\"\r\n          value={newName}\r\n          onChange={onNameChange} \r\n          required />\r\n      </div>\r\n      <div>number: <input\r\n        placeholder=\"Add Phonenumber\"\r\n        value={newNumber}\r\n        onChange={onNumberChange}\r\n        required />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PersonForm;","const Persons = ({persons, onDelete}) => {\r\n\r\n  return (\r\n    <div>\r\n      {persons.map(person => \r\n        <div key={person.id}>\r\n          <p style={{display: \"inline\"}}>{person.name} {person.number}</p>\r\n          <button onClick={() => onDelete(person.id)}>Delete</button>\r\n        </div>)\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Persons;","import axios from \"axios\";\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newPerson => {\r\n  const request = axios.post(baseUrl, newPerson)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = id => {\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst personServices = { getAll, create, update, deletePerson }\r\n\r\nexport default personServices","import React, { useEffect, useState } from 'react';\r\nimport Filter from './components/Filter';\r\nimport Notification from './components/Notification';\r\nimport PersonForm from './components/PersonForm';\r\nimport Persons from './components/Persons';\r\nimport personServices from './services/persons';\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([]);\r\n  const [ filteredPersons, setFilteredPersons ] = useState(null);\r\n  const [ notifType, setNotifType ] = useState('');\r\n  const [ notifMessage, setNotifMessage ] = useState(null);\r\n\r\n  useEffect(() => {\r\n    personServices\r\n      .getAll()\r\n      .then(initialPersons => {\r\n        setPersons(initialPersons);\r\n      })\r\n  }, []);\r\n\r\n  const filterChange = (filter) => {\r\n    const fp = filter\r\n      ? persons.filter((person) => person.name.toLowerCase().includes(filter.toLowerCase()))\r\n      : null;\r\n        \r\n    setFilteredPersons(fp)\r\n  };\r\n\r\n  const addPerson = (newName, newNumber) => {\r\n    const personExist = persons.find((person) => {\r\n      return person.name.toLowerCase() === newName.toLowerCase();\r\n    });\r\n\r\n    if (personExist) {\r\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with the new one?`)) {\r\n        const updatedPerson = { ...personExist, number: newNumber }\r\n\r\n        personServices\r\n          .update(personExist.id, updatedPerson)\r\n          .then(returnedPerson => {\r\n            setNotifType('success');\r\n            setNotifMessage(`${newName}'s information has been successfully changed`);\r\n            setTimeout(() => {\r\n              setNotifType('')\r\n              setNotifMessage(null)\r\n            }, 5000);\r\n            setPersons(persons.map(person => person.id !== personExist.id ? person : returnedPerson))\r\n          })\r\n          .catch(error => {\r\n            console.log(error.response.data);\r\n            setNotifType('error');\r\n            setNotifMessage(error.response.data.error);\r\n            setTimeout(() => {\r\n              setNotifType('')\r\n              setNotifMessage(null)\r\n            }, 5000);\r\n          });\r\n\r\n        return 1;\r\n      } else {\r\n        return;\r\n      }\r\n    } else {\r\n      const newPerson = {\r\n        name: newName,\r\n        number: newNumber,\r\n      };\r\n\r\n      personServices\r\n        .create(newPerson)\r\n        .then(returnedPerson => {\r\n          setNotifType('success');\r\n          setNotifMessage(`Added ${newName}`);\r\n          setTimeout(() => {\r\n            setNotifType('')\r\n            setNotifMessage(null)\r\n          }, 5000);\r\n          setPersons(persons.concat(returnedPerson));\r\n        })\r\n        .catch(error => {\r\n          console.log(error.response.data);\r\n          setNotifType('error');\r\n          setNotifMessage(error.response.data.error);\r\n          setTimeout(() => {\r\n            setNotifType('')\r\n            setNotifMessage(null)\r\n          }, 5000);\r\n        });\r\n\r\n      return 1;\r\n    }\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    const person = persons.find((person) => {\r\n      return person.id === id;\r\n    });\r\n\r\n    if(window.confirm(`Do you really want to delete ${person.name}?`)) {\r\n      personServices\r\n        .deletePerson(id)\r\n        .then(() => {\r\n          setNotifType('success');\r\n          setNotifMessage(`${person.name}'s information has been deleted`);\r\n        })\r\n        .catch(error => {\r\n          setNotifType('error');\r\n          setNotifMessage(`Information of ${person.name} has already been removed from server`);\r\n        })\r\n        \r\n      setTimeout(() => {\r\n        setNotifType('')\r\n        setNotifMessage(null)\r\n      }, 5000)\r\n      setPersons(persons.filter((person) => person.id !== id));\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification type={notifType} message={notifMessage} />\r\n      <Filter onChange={filterChange} />\r\n      <h3>Add a New Contact</h3>\r\n      <PersonForm onSubmit={addPerson} />\r\n      <h3>Numbers</h3>\r\n      <Persons persons={filteredPersons? filteredPersons : persons} onDelete={handleDelete}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}